- Três pontos interessantes da linguagem Rust

1° - A linguagem Rust possui um gerenciador de pacotes padrão, o qual é utilizado para criar, compilar, testar e publicar pacotes em Rust. Além disso,com a utilização do cargo é fácil gerenciar as dependencias do seu projeto e compilá-lo para diferentes sistemas operacionais com diferentes arquiteturas. Assim, o desenvolvedor de Rust não precisa perder tempo atoa com as dependencias e especificações do projeto, sobrando mais tempo para o desenvolvimento do código em si.

2° - A linguagem Rust não possui um Garbage collector como muitas linguagens de programação modernas, então para evitar problemas de gerenciamento de       memória comum dessas outras linguagens, a linguagem Rust possui uma característica chamada Ownership. O Ownership trabalha com uma ideia de posse, em que cada valor possui uma única variável chamada "Owner", a qual tem relação de posse ao valor que carrega. Quando o "Owner" sai fora do seu escopo, seja de uma função, uma estrutura de decisão ou um laço de repetição, o seu valor é destruído (drop), evitando problemas na alocação de memória.

3° - A linguagem Rust é uma linguagem multiparadigma, tendo diferentes recursos que permite o desenvolvedor expandir seu leque de opções na hora de programar para diferentes finalidades, podendo ser de maneira estruturada, funcional e até mesmo orientada à objetos. Para cobrir o paradigma funcional, o Rust possui vários mecanismos como funções de ordem superior, closures e pattern matching. Em relação a orientação à objetos, o Rust também possui mecanismos como structs, traits e implements. Dessa forma, é possível usar o Rust no desenvolvimento de servidores, jogos, ferramentas e até no próprio Linux graças as diversas funcionalidades da linguagem.
